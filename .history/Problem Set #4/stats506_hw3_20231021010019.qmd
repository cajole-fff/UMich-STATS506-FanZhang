---
title: "STATS506 Problem Set #04"
author: "Fan Zhang"
date: "10/19/2023"
format:
    html:
        embed-resources: true 
        code-line-numbers: true
        # code-fold: true
editor: 
    render-on-save: false 
---

GitHub Repository: [https://github.com/cajole-fff/UMich-STATS506-FanZhang/](https://github.com/cajole-fff/UMich-STATS506-FanZhang/)

## Problem 1 - Tidyverse 

Use the `tidyverse` for this problem. In particular, use piping and `dplyr` as much as you are able. **Note:** Use of any deprecated functions will result in a point loss. 

Install and load the package `nycflights13`.


```{r} 
# Load the packages
library(nycflights13)
library(tidyverse)
```

**a. Generate a table (which can just be a nicely printed tibble) reporting the mean and median departure delay per airport. Generate a second table (which again can be a nicely printed tibble) reporting the mean and median arrival delay per airport. Exclude any destination with under 10 flights. Do this exclusion through code, not manually.**

**Additionally,**

- Order both tables in descending mean delay.
- Both tables should use the airport names not the airport codes.
- Both tables should print all rows. 

```{r} 
# Generate table for mean and median departure delay per airport
flights %>%
    inner_join(airports, by = c("origin" = "faa")) %>%
    group_by(name) %>%
    summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE),median_dep_delay = median(dep_delay, na.rm = TRUE)) %>%
    arrange(desc(mean_dep_delay)) %>%
    print()
```

```{r} 
# Generate table for mean and median arrival delay per airport
flights %>%
    inner_join(airports, by = c("dest" = "faa")) %>%
    group_by(name) %>%
    filter(n() >= 10) %>%
    summarise(mean_arr_delay = mean(arr_delay, na.rm = TRUE),median_arr_delay = median(arr_delay, na.rm = TRUE)) %>%
    arrange(desc(mean_arr_delay)) %>%
    print()
```

**b. How many flights did the aircraft model with the fastest average speed take? Produce a tibble with 1 row, and entires for the model, average speed (in MPH) and number of flights.**

```{r}
# Generate table for the aircraft model with the fastest average speed
flights %>%
    group_by(tailnum) %>%
    summarise(mean_speed = mean(distance / air_time * 60, na.rm = TRUE), n = n()) %>%
    filter(n > 0) %>%
    arrange(desc(mean_speed)) %>%
    head(1) %>%
    print()
```

## Problem 3 - SAS 
